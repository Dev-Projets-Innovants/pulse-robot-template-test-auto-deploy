
name: Deploy Application

on:
  push:
    branches:
      - main
      - development_test
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set environment variables
        run: |
          if ("${{ github.ref }}" -eq "refs/heads/main") {
            echo "DEPLOY_ENV=prod" >> $env:GITHUB_ENV
            echo "VITE_SUPABASE_URL=${{ vars.VITE_SUPABASE_URL_PROD }}" >> $env:GITHUB_ENV
            echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY_PROD }}" >> $env:GITHUB_ENV
          } else {
            echo "DEPLOY_ENV=dev" >> $env:GITHUB_ENV
            echo "VITE_SUPABASE_URL=${{ vars.VITE_SUPABASE_URL_DEV }}" >> $env:GITHUB_ENV
            echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY_DEV }}" >> $env:GITHUB_ENV
          }
        shell: powershell

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Run Supabase migrations
        run: |
          supabase db push --project-ref ${{ vars.VITE_SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Build application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ env.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ env.VITE_SUPABASE_ANON_KEY }}

      - name: Run deployment simulation
        run: |
          powershell -ExecutionPolicy Bypass -File "scripts/simulate-ftp-deploy.ps1" -EnvName "${{ env.DEPLOY_ENV }}"
        shell: cmd

      - name: Deployment complete
        run: |
          echo "üéâ Deployment to ${{ env.DEPLOY_ENV }} environment completed successfully!"
          echo "üìÅ Files deployed to: C:\DeploySimulation\${{ env.DEPLOY_ENV }}"
